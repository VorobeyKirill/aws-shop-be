service: products-service
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs18.x
  stage: dev
  region: eu-central-1

  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "dynamodb:DescribeTable"
            - "dynamodb:Scan"
            - "dynamodb:GetItem"
            - "dynamodb:PutItem"
            - "dynamodb:Query"
          Resource:
          - "arn:aws:dynamodb:${self:provider.region}:*:table/Products"
          - "arn:aws:dynamodb:${self:provider.region}:*:table/Stocks"
        - Effect: "Allow"
          Action: "sqs:*"
          Resource:
            Fn::GetAtt:
              - SQSQueue
              - Arn
        - Effect: "Allow"
          Action: "sns:*"
          Resource:
            Ref: "createProductTopic"

functions:
  getProductsList:
    handler: handler.getProductsList
    events:
      - http:
          path: /products
          method: get

  getProductsById:
    handler: handler.getProductsById
    events:
      - http:
          path: /products/{productId}
          method: get
          request:
            parameters:
              paths:
                productId: true

  createProduct:
    handler: handler.createProduct
    events:
      - http:
          path: /products
          method: post
          cors: true

  catalogBatchProcess:
    handler: handler.catalogBatchProcess
    event:
      -sqs:
        batchSize: 5
        arn:
          Fn::GetAtt:
            - SQSQueue
            - Arn


resources:
  Resources:
    Products:
        Type: "AWS::DynamoDB::Table"
        Properties:
          TableName: "Products"
          AttributeDefinitions:
            - AttributeName: "id"
              AttributeType: "S"
          KeySchema:
            - AttributeName: "id"
              KeyType: "HASH"
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
    Stocks:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: "Stocks"
        AttributeDefinitions:
          - AttributeName: "product_id"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "product_id"
            KeyType: "HASH"
        ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
    SQSQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: "productQueue"
    createProductTopic:
      Type: "AWS::SNS::Topic"
      Properties:
        TopicName: "create-product-topic"
    createProductTopicSubscription:
      Type: "AWS::SNS::Subscription"
      Properties:
        Protocol: "email"
        TopicArn:
          Ref: "createProductTopic"
        FilterPolicy:
          price:
            - "numeric":
              - "<="
              - 500
        FilterPolicyScope: "MessageAttributes"
        Endpoint: "vorobeykirill00@gmail.com"
    createProductTopicSubscription2:
      Type: "AWS::SNS::Subscription"
      Properties:
        Protocol: "email"
        TopicArn:
          Ref: "createProductTopic"
        FilterPolicy:
          price:
            - "numeric":
              - ">"
              - 500
        FilterPolicyScope: "MessageAttributes"
        Endpoint: "Kiril_Varabei@epam.com"