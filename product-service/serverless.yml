service: products-service
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs18.x
  stage: dev
  region: eu-central-1

  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "dynamodb:DescribeTable"
            - "dynamodb:Scan"
            - "dynamodb:GetItem"
            - "dynamodb:PutItem"
            - "dynamodb:Query"
          Resource:
          - "arn:aws:dynamodb:${self:provider.region}:*:table/Products"
          - "arn:aws:dynamodb:${self:provider.region}:*:table/Stocks"

functions:
  getProductsList:
    handler: handler.getProductsList
    events:
      - http:
          path: /products
          method: get

  getProductsById:
    handler: handler.getProductsById
    events:
      - http:
          path: /products/{productId}
          method: get
          request:
            parameters:
              paths:
                productId: true

  createProduct:
    handler: handler.createProduct
    events:
      - http:
          path: /products
          method: post
          cors: true

resources:
  Resources:
    Products:
        Type: 'AWS::DynamoDB::Table'
        Properties:
          TableName: 'Products'
          AttributeDefinitions:
            - AttributeName: 'id'
              AttributeType: 'S'
          KeySchema:
            - AttributeName: 'id'
              KeyType: 'HASH'
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
    Stocks:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: 'Stocks'
        AttributeDefinitions:
          - AttributeName: 'product_id'
            AttributeType: 'S'
        KeySchema:
          - AttributeName: 'product_id'
            KeyType: 'HASH'
        ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
